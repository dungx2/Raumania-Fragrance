/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'

import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: THREE.Mesh
    Cylinder_1: THREE.Mesh
    Cylinder_2: THREE.Mesh
    Cylinder001: THREE.Mesh
  }
  materials: {
    ['Glass ']: THREE.MeshPhysicalMaterial
    Aluminum: THREE.MeshStandardMaterial
    ['Glass Inner']: THREE.MeshStandardMaterial
    ['Bottle Cap']: THREE.MeshPhysicalMaterial
  }
}
type PerfumeProps = {
    position?: [number, number, number]
    scale?: number | [number, number, number]
    capOpen?: boolean
    activeAnimation?: string | null
  }

export function DiorPerfume(props: PerfumeProps) {
  const { nodes, materials } = useGLTF('/uploads_files_4123971_Dior+perfume.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <group name="Bottle" position={[0, 0.998, 0]} rotation={[Math.PI, 0, Math.PI]}>
          <mesh
            name="Cylinder"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder.geometry}
            material={materials['Glass ']}
          />
          <mesh
            name="Cylinder_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder_1.geometry}
            material={materials.Aluminum}
          />
          <mesh
            name="Cylinder_2"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder_2.geometry}
            material={materials['Glass Inner']}
          />
          <mesh
            name="Cylinder001"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001.geometry}
            material={materials['Bottle Cap']}
            position={[0, 2.775, 0]}
            rotation={[Math.PI, 0, Math.PI]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/uploads_files_4123971_Dior+perfume.glb')
